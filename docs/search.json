[
  {
    "objectID": "ultra_tutorial.html",
    "href": "ultra_tutorial.html",
    "title": "Ultra (Overpass Ultra) Tutorial",
    "section": "",
    "text": "Ultra (née Overpass Ultra) is a web-application made to simplify making maps with MapLibre GL JS with data from various file/query types such as Overpass, GeoJSON, GPX, and more.\nDeveloped by Daniel Schep"
  },
  {
    "objectID": "ultra_tutorial.html#what-is-ultra",
    "href": "ultra_tutorial.html#what-is-ultra",
    "title": "Ultra (Overpass Ultra) Tutorial",
    "section": "",
    "text": "Ultra (née Overpass Ultra) is a web-application made to simplify making maps with MapLibre GL JS with data from various file/query types such as Overpass, GeoJSON, GPX, and more.\nDeveloped by Daniel Schep"
  },
  {
    "objectID": "ultra_tutorial.html#what-is-overpass",
    "href": "ultra_tutorial.html#what-is-overpass",
    "title": "Ultra (Overpass Ultra) Tutorial",
    "section": "2 What is Overpass?",
    "text": "2 What is Overpass?\n\nThe Overpass API is a read-only service that lets users retrieve specific OpenStreetMap (OSM) data based on custom queries.\nUnlike OSM’s main API, which focuses on editing, Overpass is optimized for data retrieval, handling anything from a few elements to millions in minutes.\nUsers can filter data by location, object type, tags, and more. Overpass Ultra, a web-based tool, helps with query creation.\nRefer to the user manual and Overpass QL guide for details.\nResulting map from this tutorial\n\nOpen the resulting map in a new window ## Building an overpass query\nIn this step-by-step tutorial we will learn how to create, style and share a map in Ultra.\nWe will be creating an interactive map of all recreation areas in Philadelphia.\n01 Open a new map in Ultra\nGo to https://overpass-ultra.us/.\nThe first time you open the web you will see a default map like this:\n\n02 Type your query\nA query is a way to filter and retrieve data from OpenStreetMap. It allows you to search for specific types of map features.\nQueries in Ultra follow the strcuture of the Overpass API.\nIf you are not familiar with OpenStreetMap data, see the info window below:\n\n\n\n\n\n\nHow data is organized in OSM?\n\n\n\n\n\nAll data in OSM is represented by an element.\nAn element can be either a node , a way  or a relation .\nEach element is described using tags which are the combination of a key and a value .\nFor example, a coffee shop is represented by an element type node with tags amenity=cafe.\nLearn more about elements and tags here.\n\n\n\nThe ‘anatomy’ of a query: Hover over the numbers on the right in the code to reveal what each line on the query does\nThe following is the default query you see when you open Ultra for the first time:\n1/*\nThis is an example Overpass query.\nTry it out by pressing the Run button above!\n*/\n2[bbox:{{bbox}}];\n(                                               \n3way[highway=path];\nway[highway=footway];\nway[highway=cycleway];\nway[highway=steps];\n4);\n5out geom;\n\n1\n\nThis is a comment. Everithing inside /*  */ will not be considered in teh query.\n\n2\n\nThis lines defines a bbox which limits the query to what you are viewing on the map.\n\n3\n\nThis line retrieves an element type way that has the key highway and value path.\n\n4\n\nAll single queries within the () are grouped together.\n\n5\n\nThe output format for your query. In this case geom returns the actual shape of the features.\n\n\nFor this example we will use the following query.\nAs there are different types of recreational areas, we will be using a group of three queries with different combinations of value for the key leisure. We will be quering elements tagged: \"leisure\":\"park\", \"leisure\":\"playground\" and \"leisure\":\"garden\". There are more tags that can describe this areas. Explore your own case study in OSM.\n\n\n\n\n\n\nNote\n\n\n\nRemember to zoom in to your ineterest area. Keep your query area small to retrieve data faster.\n\n\n6[bbox:{{bbox}}];\n7(\n8nwr[leisure=\"park\"];\n9nwr[leisure=\"playground\"];\n10nwr[leisure=\"garden\"];\n);\n11out geom;\n\n6\n\nWe will keep the [bbox:{{bbox}}]; line to filter the query to the map view.\n\n7\n\nHere we start our grouped query. As there are different types of areas, we will be using three values.\n\n8\n\nOne way to tag recreational areas is leisure:\"park\". Note that we use nwr to get any node, way or relation.\n\n9\n\nOur second query is leisure:\"playground\".\n\n10\n\nThe third type we are quering is leisure:\"garden\".\n\n11\n\nWe close our query retrieving the geomtery of the elements.\n\n\n03 Run your query\nCopy and paste this query in Ultra’s query window, and then click ‘Run’ \n\nAfter some seconds you will see the results display on the map. All results are shown in yellow. In the next steps we will learn how to style the results.\nLearn more on how to build a query here"
  },
  {
    "objectID": "ultra_tutorial.html#styling-in-ultra",
    "href": "ultra_tutorial.html#styling-in-ultra",
    "title": "Ultra (Overpass Ultra) Tutorial",
    "section": "3 Styling in Ultra",
    "text": "3 Styling in Ultra\nIn Ultra, you can style the map elements by adding a style: key on a YAML front-matter. This YAML front-matter is a way to add metadata to the query file. All these will be read by Maplibre and Ultra when rendering your resulting map.\n01 Add a title and description\nThe YAML front-matter has to be framed inside ---, just like in the example below.\n1---\n2title: Recreational areas in Philadelphia\n3description: Map of all recreational areas in the city of Philadelphia\n4---\n\n1\n\nOpening the YAML front-matter text.\n\n2\n\nTitle property to be incldued.\n\n3\n\nDescription text to be included.\n\n4\n\nClosing line of the YAML front-matter.\n\n\nCopy and paste (or type) the YAML front-matter with the title and description properties into the Ultra query we created in the previous section.\nPaste the YAML front-matter before the query text.\n\n02 Add a custom style\nStyling is possible in Ultra within the YAML front-matter. A style is a series of rules on how to visually render a map, what elements are drawn and which colors, icons, sizes, and more to use.\nUltra uses the Maplibre Style Spec. This style is specified by properties.\nIn this section we describe some of the basic properties needed to create a custom style.\nThe first step is to add style: to the YAML front-matter. You can tyoe it right after the description: property.\nWe will assign colors to the polygons we obtained from the query. For that we will add a layer of type fill (polygon) with - type: fill. There are other types of layers you can add: ‘background’, ‘circle’, ‘heatmap’, ‘fill-extrusion’, ‘line’, ‘symbol’. Each serves different purposes and works for specific elements, if it is a point, for example, you might use type:symbol.\nThen we specify the property of our layer of type ‘fill’ we want to modify.\nWe add fill-color: to change the color of our polygons. Each layer type has its own properties that can be modified. See Layes on the Maplibre Style Spec documentation.\n03 Add conditionals to assign colors based on the feature properties\nSince we want to color each type of recreational area with a different color, we are using - case (line 9) to introduce conditions. We type a conditional statement followed by a specific color for each type of recreational area.\nOn line 10 of the example code we add [get, leisure] to select the tag leisure from the proeprties. Then we ask for those elements that have \"park\" as the value for that tag. The == symbol states this.\nOn line 11, we specify the color we want to assign to the polygons with tag leisure=park. The colors can be specified using the ‘rgb’ (red, green, blue) format. You can use tools like Google Color Picker to know the ‘rgb’ code of a color.\nLines 12 to 15 on the sample code contain the same conditional + color for the other two types of recreational areas: playground and garden.\nOn line 16 we introduce a fallback color. This color will be assigned to polygons that do not satisfy the conditions in our case. You always need to assign a fallback color in Maplibre Style Spec.\n04 Run the query again\nCopy and paste the sample code below on your Ultra map and run the query again.\n---\ntitle: Recreational areas in Philadelphia\ndescription: Map of all recreational areas in the city of Philadelphia\n1style:\n2  layers:\n3    - type: fill\n4      paint:\n5        fill-color:\n6          - case\n7          - [ ==, [ get, leisure ], \"park\" ]\n8          - rgb(159, 247, 7) # green\n9          - [ ==, [ get, leisure ], \"playground\" ]\n          - rgb(80, 163, 91) # dark gren\n          - [ ==, [ get, leisure ], \"garden\" ]\n          - rgb(181, 159, 16) # brown\n10          - rgb(0, 0, 0)\n---\n[bbox:{{bbox}}];\n(\n  nwr[leisure=park];\n  nwr[leisure=playground];\n  nwr[leisure=garden];\n);\nout geom;\n\n1\n\nWe start the style section with this line.\n\n2\n\nThe most important property is layers which adds something to the map.\n\n3\n\nWe define our layer type as fill as we want the polygons to be painted in the map.\n\n4\n\nThere are two main types of properties paint: and layout.\n\n5\n\nWe define the fill-color to be the property we want to modify.\n\n6\n\nThe case expression will assign a value to an output of a condition (lines 10 to 15).\n\n7\n\nWe search for features that have park as the value of leisure.\n\n8\n\nThis color is assigned to those features that satisfy the condition established in the previous line.\n\n9\n\nWe do the same evaluation and assignment for thos features with playground (line 13) and garden (line 15).\n\n10\n\nThis is the fallback color. This will be assigned if there are features that do not satisfy any of the previous conditions.\n\n\n\n05 Change the background style\nUltra comes with a variety of background styles you can choose. To change the style click on the Pick Style button on the top menu bar and select any style from the list.\nIn this example we chose ‘Protomaps Light’ because it uses shadows of grey for most of the elements, highlighting the vibrant greens we chose for the parks.\n\nNotice that an extra line is added to the YAML front-matter with the URL of the background style used. You can chose from anny of the styles in Ultra or use your own from a URL pointing to a JSON file."
  },
  {
    "objectID": "ultra_tutorial.html#adding-interactivity-to-the-map",
    "href": "ultra_tutorial.html#adding-interactivity-to-the-map",
    "title": "Ultra (Overpass Ultra) Tutorial",
    "section": "4 Adding interactivity to the map",
    "text": "4 Adding interactivity to the map\nIn this section we explore some additional options to customize your resulting map. From an initial center point and zoom, to adding navigation controls and popup windows.\n\n4.1 Adding an initial center point and zoom level\nUltra allows adding some additional options for your map, equivalent to Maplibre Style Spec MapOptions.\nAdding an inital center point and zoom is helpful to ensure the map starts in the desired location for the viewer.\nTo add a center point, simply add the following to your query window, after the description: property and before the style:.\noptions:\n  center: [-75.16342, 39.95500]\n  zoom: 13\nThe values in this example are centered in the city of Philadelphia, PA.\nTo know the coordinates and zoom level for a different area you can use the Mapbox Location Helper. Zoom to the area you want and copy/paste the values on center(array) and zoom.\n\n\n\n4.2 Adding navigation controls to the map\nSimilar as the MapOptions, Ultra allows adding controls to the resulting map.\nIn this example we are adding a NavigationControl ,\na GeolocateControl  and an HTMLControl.\nTo add these three controls, just copy and paste the following code lines after the options: property and before the style: in your query.\n1controls:\n2  - type: NavigationControl\n3    position: top-right\n4  - type: GeolocateControl\n    options:\n      positionOptions:\n        enableHighAccuracy: true\n5      trackUserLocation: true\n6  - type: HTMLControl\n    options:\n7      html: &gt;\n8        &lt;h1&gt;&lt;center&gt;Green areas in Philadelphia&lt;/center&gt;&lt;/h1&gt;\n9      css: &gt;\n        h1 {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n        }\n\n1\n\nAdding the controls: property.\n\n2\n\nFist we add a type NavigationControl.\n\n3\n\nSet the position of the control in the map window.\n\n4\n\nSecond we add a GeolocateControl.\n\n5\n\nWe enable the option to track the user location.\n\n6\n\nThird we add the HTMLControl to include a title for the map.\n\n7\n\nOpen an html section.\n\n8\n\nInclude the text for the title betwen the &lt;center&gt; &lt;/center&gt;.\n\n9\n\nStyle the title using css.\n\n\n\n\n\n\n\n\nNote\n\n\n\nThese options will be visible only when you share the qyery as an interactive map. See section 6 of this tutorial.\n\n\n\n\n4.3 Customizing the popup window\nFinally, another useful option to add is a customized popup window. This window will appear when the viewer clicks or hover the mouse over one of the elements from the query.\nHere we add a customized popup window that shows the name and leisure type and will appear when one hovers over the polygon.\nPaste the code below under the description: property on your query.\n1popupOnHover: true\n2popupTemplate: \"{{tags.name}} - {{tags.leisure}}\"\n\n1\n\nThis activates the popup on hover. The defualt is when click.\n\n2\n\nWe only add the feature name and leisure type to the popup."
  },
  {
    "objectID": "ultra_tutorial.html#complete-query-for-an-interactive-map",
    "href": "ultra_tutorial.html#complete-query-for-an-interactive-map",
    "title": "Ultra (Overpass Ultra) Tutorial",
    "section": "5 Complete query for an interactive map",
    "text": "5 Complete query for an interactive map\nYou can copy and paste the code below on your query window. Remember to zoom in to Philadelphia to have the correct bbox for the map configured here. If you are working on a different area of interest, zoom in to that area and change the center: and zoom: properties on the YAML front-matter before running the query.\n---\ntitle: Recreational areas in Philadelphia\ndescription: Map of all recreational areas in the city of Philadelphia\npopupOnHover: true\npopupTemplate: \"{{tags.name}} - {{tags.leisure}}\"\noptions:\n  center: [-75.17474, 39.95880]\n  zoom: 13.83\ncontrols:\n  - type: NavigationControl\n    position: top-right\n  - type: GeolocateControl\n    options:\n      positionOptions:\n        enableHighAccuracy: true\n      trackUserLocation: true\n  - type: HTMLControl\n    options:\n      html: &gt;\n        &lt;h1&gt;&lt;center&gt;Green areas in Philadelphia&lt;/center&gt;&lt;/h1&gt;\n      css: &gt;\n        h1 {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n        }\nstyle:\n  layers:                                          \n    - type: fill                                                  \n      paint:                                          \n        fill-color:\n          - case\n          - [ ==, [ get, leisure ], \"park\" ]\n          - rgb(159, 247, 7) # green\n          - [ ==, [ get, leisure ], \"playground\" ]\n          - rgb(80, 163, 91) # dark gren\n          - [ ==, [ get, leisure ], \"garden\" ]\n          - rgb(181, 159, 16) # brown\n          - rgb(0, 0, 0)\n  extends: https://styles.trailsta.sh/protomaps-light.json\n---\n[bbox:{{bbox}}];\n(\n  nwr[leisure=park];\n  nwr[leisure=playground];\n  nwr[leisure=garden];\n);\nout geom;\n\n\n\nResulting Query Map"
  },
  {
    "objectID": "ultra_tutorial.html#sharing-you-ultra-map",
    "href": "ultra_tutorial.html#sharing-you-ultra-map",
    "title": "Ultra (Overpass Ultra) Tutorial",
    "section": "6 Sharing you Ultra map",
    "text": "6 Sharing you Ultra map\nThe last step is to share your resulting map.\nThere are mutliple ways you can share it online, as a query or an interactive map.\n01 Click on Share\nClick on the Share \n02 Select how you want to share\nIn the new window, select how you want to share the map.\n\n\nIf you select to share as query, the link will open the map and query with all actions.\n\n\n\nIf you select to share as an interactive map, the link will open a mapview only, without the query window on the side."
  },
  {
    "objectID": "ultra_tutorial.html#attribution",
    "href": "ultra_tutorial.html#attribution",
    "title": "Ultra (Overpass Ultra) Tutorial",
    "section": "Attribution",
    "text": "Attribution\n\n\nOpen Geospatial Data by Felipe Valdez is licensed under CC BY-NC-SA 4.0"
  }
]